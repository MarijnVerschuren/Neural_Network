; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31630.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation@		; `string'
PUBLIC	??_C@_0DK@CKLHOJNA@Alignment?5must?5be?5at?5least?5size@ ; `string'
PUBLIC	??_C@_1MG@ODDCIJJL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@ ; `string'
PUBLIC	??_C@_1PM@EGIIFBMJ@?$AAa?$AAl?$AAi?$AAg?$AAn?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi@ ; `string'
PUBLIC	??_C@_0BL@HFNNJIJB@dat?1test_images?4idx3?9ubyte@ ; `string'
PUBLIC	??_C@_0BL@GJACGMHJ@dat?1test_labels?4idx1?9ubyte@ ; `string'
PUBLIC	??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@ ; `string'
PUBLIC	??_C@_1BBE@FLFGDPIJ@?$AA?$CI?$AA?$CI?$AAS?$AAi?$AAz?$AAe?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0CP@LINCKCAG@Invalid?5sizes?5when?5resizing?5a?5m@ ; `string'
PUBLIC	??_C@_1DBO@BCDCEIEF@?$AA?$CI?$AA?$CB?$AA?$CI?$AAR?$AAo?$AAw?$AAs?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	_CTA2?AVbad_alloc@std@@
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_TI2?AVbad_alloc@std@@
EXTRN	__imp_malloc:PROC
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp__wassert:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp___std_terminate:PROC
EXTRN	__imp_free:PROC
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp___std_exception_copy:PROC
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPEAXW4align_val_t@std@@@Z:PROC		; operator delete[]
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	__imp___std_exception_destroy:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp___CxxFrameHandler4:PROC
;	COMDAT _TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
_TI2?AVbad_alloc@std@@ DD 00H
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT _CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
_CTA2?AVbad_alloc@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1DBO@BCDCEIEF@?$AA?$CI?$AA?$CB?$AA?$CI?$AAR?$AAo?$AAw?$AAs?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl@
CONST	SEGMENT
??_C@_1DBO@BCDCEIEF@?$AA?$CI?$AA?$CB?$AA?$CI?$AAR?$AAo?$AAw?$AAs?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl@ DB '('
	DB	00H, '!', 00H, '(', 00H, 'R', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'A', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H
	DB	'!', 00H, '=', 00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, '(', 00H, 'r', 00H, 'o', 00H, 'w', 00H, 's', 00H, '='
	DB	00H, '=', 00H, 'R', 00H, 'o', 00H, 'w', 00H, 's', 00H, 'A', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ')', 00H
	DB	')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '(', 00H, '!'
	DB	00H, '(', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 's', 00H, 'A', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '!', 00H
	DB	'=', 00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'i'
	DB	00H, 'c', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H
	DB	'(', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 's', 00H, '=', 00H, '='
	DB	00H, 'C', 00H, 'o', 00H, 'l', 00H, 's', 00H, 'A', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '(', 00H, '!', 00H, '('
	DB	00H, 'R', 00H, 'o', 00H, 'w', 00H, 's', 00H, 'A', 00H, 't', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '=', 00H, '=', 00H
	DB	'D', 00H, 'y', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'i', 00H, 'c'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'M', 00H, 'a', 00H
	DB	'x', 00H, 'R', 00H, 'o', 00H, 'w', 00H, 's', 00H, 'A', 00H, 't'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '!', 00H, '='
	DB	00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'i', 00H
	DB	'c', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, '('
	DB	00H, 'r', 00H, 'o', 00H, 'w', 00H, 's', 00H, '<', 00H, '=', 00H
	DB	'M', 00H, 'a', 00H, 'x', 00H, 'R', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'A', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, ')', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'(', 00H, '!', 00H, '(', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 's'
	DB	00H, 'A', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, '=', 00H, '=', 00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a', 00H
	DB	'm', 00H, 'i', 00H, 'c', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'M', 00H, 'a', 00H, 'x', 00H, 'C', 00H, 'o', 00H, 'l', 00H
	DB	's', 00H, 'A', 00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H
	DB	'e', 00H, '!', 00H, '=', 00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'i', 00H, 'c', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, '(', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 's'
	DB	00H, '<', 00H, '=', 00H, 'M', 00H, 'a', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, 'A', 00H, 't', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, ')', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'r', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'>', 00H, '=', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'l', 00H, 's', 00H, '>', 00H, '=', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, 'w', 00H, 'h', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'a', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'x', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '.', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LINCKCAG@Invalid?5sizes?5when?5resizing?5a?5m@
CONST	SEGMENT
??_C@_0CP@LINCKCAG@Invalid?5sizes?5when?5resizing?5a?5m@ DB 'Invalid size'
	DB	's when resizing a matrix or array.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BBE@FLFGDPIJ@?$AA?$CI?$AA?$CI?$AAS?$AAi?$AAz?$AAe?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1BBE@FLFGDPIJ@?$AA?$CI?$AA?$CI?$AAS?$AAi?$AAz?$AAe?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe@ DB '('
	DB	00H, '(', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'A', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'y', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'i', 00H, 'c', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '(', 00H, 'M', 00H, 'a', 00H, 'x', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'A', 00H, 't', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, '=', 00H, '=', 00H, 'D', 00H, 'y', 00H
	DB	'n', 00H, 'a', 00H, 'm', 00H, 'i', 00H, 'c', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'<', 00H, '=', 00H, 'M', 00H, 'a', 00H, 'x', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'A', 00H, 't', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'A'
	DB	00H, 't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, '>', 00H, '=', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
CONST	SEGMENT
??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'm', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'j'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c'
	DB	00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, '\', 00H, 'G', 00H, 'i', 00H, 't', 00H, 'H', 00H, 'u'
	DB	00H, 'b', 00H, '\', 00H, 'N', 00H, 'e', 00H, 'u', 00H, 'r', 00H
	DB	'a', 00H, 'l', 00H, '_', 00H, 'N', 00H, 'e', 00H, 't', 00H, 'w'
	DB	00H, 'o', 00H, 'r', 00H, 'k', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'e', 00H, 's', 00H, '\', 00H, 'E', 00H, 'i', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'e', 00H, '\', 00H
	DB	'P', 00H, 'l', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'O', 00H, 'b'
	DB	00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'B', 00H, 'a', 00H
	DB	's', 00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GJACGMHJ@dat?1test_labels?4idx1?9ubyte@
CONST	SEGMENT
??_C@_0BL@GJACGMHJ@dat?1test_labels?4idx1?9ubyte@ DB 'dat/test_labels.idx'
	DB	'1-ubyte', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HFNNJIJB@dat?1test_images?4idx3?9ubyte@
CONST	SEGMENT
??_C@_0BL@HFNNJIJB@dat?1test_images?4idx3?9ubyte@ DB 'dat/test_images.idx'
	DB	'3-ubyte', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@EGIIFBMJ@?$AAa?$AAl?$AAi?$AAg?$AAn?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi@
CONST	SEGMENT
??_C@_1PM@EGIIFBMJ@?$AAa?$AAl?$AAi?$AAg?$AAn?$AAm?$AAe?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi@ DB 'a'
	DB	00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H
	DB	'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, '*', 00H, ')', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '(', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, ' ', 00H, '&', 00H, ' ', 00H, '(', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '-', 00H, '1', 00H, ')', 00H, ')', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, '"', 00H, 'A', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'm', 00H, 'u'
	DB	00H, 's', 00H, 't', 00H, ' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 't', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd'
	DB	00H, '*', 00H, ')', 00H, ' ', 00H, 'a', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, 'a', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'w', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, '2', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@ODDCIJJL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
CONST	SEGMENT
??_C@_1MG@ODDCIJJL@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'm', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'j'
	DB	00H, '\', 00H, 'O', 00H, 'n', 00H, 'e', 00H, 'D', 00H, 'r', 00H
	DB	'i', 00H, 'v', 00H, 'e', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'c'
	DB	00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, '\', 00H, 'G', 00H, 'i', 00H, 't', 00H, 'H', 00H, 'u'
	DB	00H, 'b', 00H, '\', 00H, 'N', 00H, 'e', 00H, 'u', 00H, 'r', 00H
	DB	'a', 00H, 'l', 00H, '_', 00H, 'N', 00H, 'e', 00H, 't', 00H, 'w'
	DB	00H, 'o', 00H, 'r', 00H, 'k', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'e', 00H, 's', 00H, '\', 00H, 'E', 00H, 'i', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'C', 00H, 'o', 00H, 'r', 00H, 'e', 00H, '\', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '\', 00H, 'M', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CKLHOJNA@Alignment?5must?5be?5at?5least?5size@
CONST	SEGMENT
??_C@_0DK@CKLHOJNA@Alignment?5must?5be?5at?5least?5size@ DB 'Alignment mu'
	DB	'st be at least sizeof(void*) and a power of 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
PUBLIC	??$construct_elements_of_array@N@internal@Eigen@@YAPEANPEAN_K@Z ; Eigen::internal::construct_elements_of_array<double>
PUBLIC	??$conditional_aligned_malloc@$00@internal@Eigen@@YAPEAX_K@Z ; Eigen::internal::conditional_aligned_malloc<1>
PUBLIC	??$check_size_for_overflow@N@internal@Eigen@@YAX_K@Z ; Eigen::internal::check_size_for_overflow<double>
PUBLIC	??$conditional_aligned_free@$00@internal@Eigen@@YAXPEAX@Z ; Eigen::internal::conditional_aligned_free<1>
PUBLIC	??$destruct_elements_of_array@N@internal@Eigen@@YAXPEAN_K@Z ; Eigen::internal::destruct_elements_of_array<double>
PUBLIC	?derived@?$BaseExpr@V?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@symbolic@Eigen@@@symbolic@Eigen@@QEBAAEBV?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@23@XZ ; Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::derived
PUBLIC	??0?$AddExpr@V?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@symbolic@Eigen@@V?$ValueExpr@V?$FixedInt@$00@internal@Eigen@@@23@@symbolic@Eigen@@QEAA@AEBV?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@12@AEBV?$ValueExpr@V?$FixedInt@$00@internal@Eigen@@@12@@Z ; Eigen::symbolic::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>,Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >::AddExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>,Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> > >
PUBLIC	??0?$ValueExpr@V?$FixedInt@$00@internal@Eigen@@@symbolic@Eigen@@QEAA@XZ ; Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >::ValueExpr<Eigen::internal::FixedInt<1> >
PUBLIC	??0?$FixedInt@$00@internal@Eigen@@QEAA@XZ	; Eigen::internal::FixedInt<1>::FixedInt<1>
PUBLIC	??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z ; Eigen::internal::conditional_aligned_new_auto<double,1>
PUBLIC	??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z ; Eigen::internal::check_rows_cols_for_overflow<-1>::run<__int64>
PUBLIC	??$conditional_aligned_delete_auto@N$00@internal@Eigen@@YAXPEAN_K@Z ; Eigen::internal::conditional_aligned_delete_auto<double,1>
PUBLIC	??$?H$00@?$BaseExpr@V?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@symbolic@Eigen@@@symbolic@Eigen@@QEBA?AV?$AddExpr@V?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@symbolic@Eigen@@V?$ValueExpr@V?$FixedInt@$00@internal@Eigen@@@23@@12@V?$FixedInt@$00@internal@2@@Z ; Eigen::symbolic::BaseExpr<Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag> >::operator+<1>
PUBLIC	??0?$DenseBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@IEAA@XZ ; Eigen::DenseBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::DenseBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >
PUBLIC	??0?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAA@XZ ; Eigen::DenseStorage<double,-1,-1,-1,0>::DenseStorage<double,-1,-1,-1,0>
PUBLIC	??0?$DenseBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@IEAA@XZ ; Eigen::DenseBase<Eigen::Matrix<double,-1,1,0,-1,1> >::DenseBase<Eigen::Matrix<double,-1,1,0,-1,1> >
PUBLIC	??0?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAA@XZ ; Eigen::DenseStorage<double,-1,-1,1,0>::DenseStorage<double,-1,-1,1,0>
PUBLIC	??0?$MatrixBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@IEAA@XZ ; Eigen::MatrixBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::MatrixBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >
PUBLIC	??0?$MatrixBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@IEAA@XZ ; Eigen::MatrixBase<Eigen::Matrix<double,-1,1,0,-1,1> >::MatrixBase<Eigen::Matrix<double,-1,1,0,-1,1> >
PUBLIC	?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z ; Eigen::DenseStorage<double,-1,-1,-1,0>::resize
PUBLIC	??0?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@IEAA@XZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >
PUBLIC	?_check_template_params@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@SAXXZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::_check_template_params
PUBLIC	?resize@?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAAX_J00@Z ; Eigen::DenseStorage<double,-1,-1,1,0>::resize
PUBLIC	??0?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@IEAA@XZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >
PUBLIC	?_check_template_params@?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@SAXXZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >::_check_template_params
PUBLIC	??0?$SymbolExpr@Usymbolic_last_tag@internal@Eigen@@@symbolic@Eigen@@QEAA@XZ ; Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>::SymbolExpr<Eigen::internal::symbolic_last_tag>
PUBLIC	??R?$FixedInt@$00@internal@Eigen@@QEBA?AV012@XZ	; Eigen::internal::FixedInt<1>::operator()
PUBLIC	??1?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAA@XZ ; Eigen::DenseStorage<double,-1,-1,-1,0>::~DenseStorage<double,-1,-1,-1,0>
PUBLIC	?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::resize
PUBLIC	??0?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ ; Eigen::Matrix<double,-1,-1,0,-1,-1>::Matrix<double,-1,-1,0,-1,-1>
PUBLIC	??1?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAA@XZ ; Eigen::DenseStorage<double,-1,-1,1,0>::~DenseStorage<double,-1,-1,1,0>
PUBLIC	?resize@?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@QEAAX_J@Z ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >::resize
PUBLIC	??0?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ	; Eigen::Matrix<double,-1,1,0,-1,1>::Matrix<double,-1,1,0,-1,1>
PUBLIC	??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>
PUBLIC	?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ	; std::initializer_list<unsigned __int64>::begin
PUBLIC	?end@?$initializer_list@_K@std@@QEBAPEB_KXZ	; std::initializer_list<unsigned __int64>::end
PUBLIC	?size@?$initializer_list@_K@std@@QEBA_KXZ	; std::initializer_list<unsigned __int64>::size
PUBLIC	??1?$Data@CV?$Matrix@N$0BM@$0BM@$0A@$0BM@$0BM@@Eigen@@@Neural@@QEAA@XZ ; Neural::Data<signed char,Eigen::Matrix<double,28,28,0,28,28> >::~Data<signed char,Eigen::Matrix<double,28,28,0,28,28> >
PUBLIC	??1Data_Set@Mnist@@QEAA@XZ			; Mnist::Data_Set::~Data_Set
PUBLIC	?__autoclassinit2@Network@Neural@@QEAAX_K@Z	; Neural::Network::__autoclassinit2
PUBLIC	main
PUBLIC	??1?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@QEAA@XZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >::~PlainObjectBase<Eigen::Matrix<double,-1,1,0,-1,1> >
PUBLIC	??1?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ	; Eigen::Matrix<double,-1,1,0,-1,1>::~Matrix<double,-1,1,0,-1,1>
PUBLIC	??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z ; Eigen::Matrix<double,-1,1,0,-1,1>::`vector deleting destructor'
PUBLIC	??1?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAA@XZ ; Eigen::PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >::~PlainObjectBase<Eigen::Matrix<double,-1,-1,0,-1,-1> >
PUBLIC	??1?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ ; Eigen::Matrix<double,-1,-1,0,-1,-1>::~Matrix<double,-1,-1,0,-1,-1>
PUBLIC	??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z ; Eigen::Matrix<double,-1,-1,0,-1,-1>::`vector deleting destructor'
PUBLIC	??1Network@Neural@@QEAA@XZ			; Neural::Network::~Network
PUBLIC	??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z ; Neural::Network::Network
PUBLIC	??0all_t@internal@Eigen@@QEAA@XZ		; Eigen::internal::all_t::all_t
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?aligned_free@internal@Eigen@@YAXPEAX@Z		; Eigen::internal::aligned_free
PUBLIC	?aligned_malloc@internal@Eigen@@YAPEAX_K@Z	; Eigen::internal::aligned_malloc
PUBLIC	?check_that_malloc_is_allowed@internal@Eigen@@YAXXZ ; Eigen::internal::check_that_malloc_is_allowed
PUBLIC	?handmade_aligned_free@internal@Eigen@@YAXPEAX@Z ; Eigen::internal::handmade_aligned_free
PUBLIC	?handmade_aligned_malloc@internal@Eigen@@YAPEAX_K0@Z ; Eigen::internal::handmade_aligned_malloc
PUBLIC	?throw_std_bad_alloc@internal@Eigen@@YAXXZ	; Eigen::internal::throw_std_bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QEAA@XZ			; std::bad_alloc::bad_alloc
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__real@406fe00000000000
EXTRN	__std_terminate:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$conditional_aligned_malloc@$00@internal@Eigen@@YAPEAX_K@Z DD imagerel $LN16@conditiona
	DD	imagerel $LN16@conditiona+69
	DD	imagerel $unwind$??$conditional_aligned_malloc@$00@internal@Eigen@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$check_size_for_overflow@N@internal@Eigen@@YAX_K@Z DD imagerel $LN7@check_size
	DD	imagerel $LN7@check_size+30
	DD	imagerel $unwind$??$check_size_for_overflow@N@internal@Eigen@@YAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DD imagerel $LN32@conditiona
	DD	imagerel $LN32@conditiona+38
	DD	imagerel $unwind$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DD imagerel $LN32@conditiona+38
	DD	imagerel $LN32@conditiona+105
	DD	imagerel $chain$0$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DD imagerel $LN32@conditiona+105
	DD	imagerel $LN32@conditiona+111
	DD	imagerel $chain$1$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DD imagerel $LN32@conditiona+111
	DD	imagerel $LN32@conditiona+117
	DD	imagerel $chain$2$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z DD imagerel $LN9@run
	DD	imagerel $LN9@run+48
	DD	imagerel $unwind$??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z DD imagerel $LN18@resize
	DD	imagerel $LN18@resize+136
	DD	imagerel $unwind$?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAAX_J00@Z DD imagerel $LN18@resize
	DD	imagerel $LN18@resize+131
	DD	imagerel $unwind$?resize@?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAAX_J00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DD imagerel $LN29@resize
	DD	imagerel $LN29@resize+99
	DD	imagerel $unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DD imagerel $LN29@resize+99
	DD	imagerel $LN29@resize+188
	DD	imagerel $chain$0$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DD imagerel $LN29@resize+188
	DD	imagerel $LN29@resize+194
	DD	imagerel $chain$1$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@QEAAX_J@Z DD imagerel $LN39@resize
	DD	imagerel $LN39@resize+124
	DD	imagerel $unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@QEAAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$Data@CV?$Matrix@N$0BM@$0BM@$0A@$0BM@$0BM@@Eigen@@@Neural@@QEAA@XZ DD imagerel $LN7@Data
	DD	imagerel $LN7@Data+52
	DD	imagerel $unwind$??1?$Data@CV?$Matrix@N$0BM@$0BM@$0A@$0BM@$0BM@@Eigen@@@Neural@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Data_Set@Mnist@@QEAA@XZ DD imagerel $LN9@Data_Set
	DD	imagerel $LN9@Data_Set+52
	DD	imagerel $unwind$??1Data_Set@Mnist@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN121
	DD	imagerel $LN121+619
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z DD imagerel $LN26@vector
	DD	imagerel $LN26@vector+58
	DD	imagerel $unwind$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z DD imagerel $LN26@vector
	DD	imagerel $LN26@vector+62
	DD	imagerel $unwind$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Network@Neural@@QEAA@XZ DD imagerel $LN57
	DD	imagerel $LN57+133
	DD	imagerel $unwind$??1Network@Neural@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z DD imagerel $LN121
	DD	imagerel $LN121+622
	DD	imagerel $unwind$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA DD imagerel ?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA+62
	DD	imagerel $unwind$?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA DD imagerel ?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
	DD	imagerel ?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA+62
	DD	imagerel $unwind$?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN12@vector
	DD	imagerel $LN12@vector+53
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?aligned_malloc@internal@Eigen@@YAPEAX_K@Z DD imagerel $LN13@aligned_ma
	DD	imagerel $LN13@aligned_ma+69
	DD	imagerel $unwind$?aligned_malloc@internal@Eigen@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?handmade_aligned_malloc@internal@Eigen@@YAPEAX_K0@Z DD imagerel $LN7@handmade_a
	DD	imagerel $LN7@handmade_a+55
	DD	imagerel $unwind$?handmade_aligned_malloc@internal@Eigen@@YAPEAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?throw_std_bad_alloc@internal@Eigen@@YAXXZ DD imagerel $LN4@throw_std_
	DD	imagerel $LN4@throw_std_+32
	DD	imagerel $unwind$?throw_std_bad_alloc@internal@Eigen@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN7@bad_alloc
	DD	imagerel $LN7@bad_alloc+63
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN12@scalar
	DD	imagerel $LN12@scalar+67
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN9@scalar
	DD	imagerel $LN9@scalar+67
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN5@exception
	DD	imagerel $LN5@exception+53
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DQ 00006340a00040a01r ; 8.62672e-309
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DQ 00006340a00040a01r ; 8.62672e-309
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?throw_std_bad_alloc@internal@Eigen@@YAXXZ DQ 00000820400010401r ; 7.06285e-310
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?handmade_aligned_malloc@internal@Eigen@@YAPEAX_K0@Z DQ 00000420400010401r ; 3.58617e-310
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?aligned_malloc@internal@Eigen@@YAPEAX_K@Z DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DQ 00006340f00040f01r ; 8.62683e-309
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z DB 0aH
	DB	0b8H
	DB	00H
	DB	'Z'
	DB	02H
	DB	'J'
	DB	00H
	DB	'Z'
	DB	04H
	DB	0f6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z
	DD	imagerel $ip2state$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z DD 0a1411H
	DD	0113414H
	DD	0f0107214H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Network@Neural@@QEAA@XZ DB 04H
	DB	'P'
	DB	02H
	DB	0a4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Network@Neural@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Network@Neural@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1Network@Neural@@QEAA@XZ
	DD	imagerel $ip2state$??1Network@Neural@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Network@Neural@@QEAA@XZ DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Network@Neural@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z DW 03202H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z DQ 03002320600020619r ; 1.96423e-77
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_E?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z DW 03202H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z DQ 03002320600020619r ; 1.96423e-77
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_E?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DB 08H
	DB	0deH
	DB	00H
	DB	016H
	DB	02H
	DB	0a1H, 05H
	DB	04H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DB 04H
	DB	0aH
	DD	imagerel ??1Network@Neural@@QEAA@XZ
	DB	0c0H
	DB	03eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$main DB 028H
	DD	imagerel $stateUnwindMap$main
	DD	imagerel $ip2state$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	0f3419H
	DD	086825H
	DD	01a641fH
	DD	019541fH
	DD	018341fH
	DD	012011fH
	DD	0e016f018H
	DD	0c012d014H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$main
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Data_Set@Mnist@@QEAA@XZ DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$Data@CV?$Matrix@N$0BM@$0BM@$0A@$0BM@$0BM@@Eigen@@@Neural@@QEAA@XZ DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@@Eigen@@QEAAX_J@Z DQ 00006340a00040a01r ; 8.62672e-309
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DD 021H
	DD	imagerel $LN29@resize
	DD	imagerel $LN29@resize+99
	DD	imagerel $unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DQ 00006540500020521r ; 8.80045e-309
	DD	imagerel $LN29@resize
	DD	imagerel $LN29@resize+99
	DD	imagerel $unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$PlainObjectBase@V?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@@Eigen@@QEAAX_J0@Z DQ 00008640f00060f01r ; 1.16689e-308
	DQ	0700b320f0007340fr		; 5.2777e+231
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$DenseStorage@N$0?0$0?0$00$0A@@Eigen@@QEAAX_J00@Z DQ 00007640f00060f01r ; 1.02782e-308
	DQ	0700b320f0006340fr		; 5.2777e+231
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z DQ 00008641400081401r ; 1.1669e-308
	DQ	00006341400075414r		; 8.62693e-309
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z DQ 00000420400010401r ; 3.58617e-310
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DQ 00004340000020021r ; 5.84516e-309
	DD	imagerel $LN32@conditiona
	DD	imagerel $LN32@conditiona+38
	DD	imagerel $unwind$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DD 021H
	DD	imagerel $LN32@conditiona
	DD	imagerel $LN32@conditiona+38
	DD	imagerel $unwind$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DQ 00004340500020521r ; 5.84527e-309
	DD	imagerel $LN32@conditiona
	DD	imagerel $LN32@conditiona+38
	DD	imagerel $unwind$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z DQ 00000420400010401r ; 3.58617e-310
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$check_size_for_overflow@N@internal@Eigen@@YAX_K@Z DQ 00000420400010401r ; 3.58617e-310
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$conditional_aligned_malloc@$00@internal@Eigen@@YAPEAX_K@Z DQ 03002320600020601r ; 1.96423e-77
xdata	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\util\Memory.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\util\Memory.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
;	COMDAT ??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z
_TEXT	SEGMENT
$T5 = 48
$T1 = 48
$T4 = 56
$T2 = 56
this$ = 128
input_size$dead$ = 136
layers$ = 144
output_size$dead$ = 152
??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z PROC ; Neural::Network::Network, COMDAT

; 38   : 		Network(uint64_t input_size, std::initializer_list<uint64_t> layers, uint64_t output_size) {

$LN121:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	41 54		 push	 r12
  0000a	41 55		 push	 r13
  0000c	41 56		 push	 r14
  0000e	41 57		 push	 r15
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	4c 8b f1	 mov	 r14, rcx

; 28   : 		Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>*		weights =		nullptr;

  00017	33 c0		 xor	 eax, eax
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax

; 29   : 		Eigen::Matrix<double, Eigen::Dynamic, 1>*					biases =		nullptr;

  0001c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 30   : 		uint64_t													layer_count =	0;

  00020	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list

; 46   :         return static_cast<size_t>(_Last - _First);

  00024	4d 8b 60 08	 mov	 r12, QWORD PTR [r8+8]
  00028	49 8b 30	 mov	 rsi, QWORD PTR [r8]
  0002b	4d 8b fc	 mov	 r15, r12
  0002e	4c 2b fe	 sub	 r15, rsi
  00031	49 c1 ff 03	 sar	 r15, 3
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 40   : 			weights = new Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>[hidden_layer_count + 1];

  00035	49 8d 7f 01	 lea	 rdi, QWORD PTR [r15+1]
  00039	48 89 7c 24 30	 mov	 QWORD PTR $T1[rsp], rdi
  0003e	b8 18 00 00 00	 mov	 eax, 24
  00043	48 f7 e7	 mul	 rdi
  00046	48 c7 c5 ff ff
	ff ff		 mov	 rbp, -1
  0004d	48 0f 40 c5	 cmovo	 rax, rbp
  00051	48 83 c0 08	 add	 rax, 8
  00055	48 0f 42 c5	 cmovb	 rax, rbp
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  00061	48 89 44 24 38	 mov	 QWORD PTR $T2[rsp], rax
  00066	48 89 38	 mov	 QWORD PTR [rax], rdi
  00069	48 8d 58 08	 lea	 rbx, QWORD PTR [rax+8]
  0006d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??1?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ
  00074	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00079	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ ; Eigen::Matrix<double,-1,-1,0,-1,-1>::Matrix<double,-1,-1,0,-1,-1>
  00080	4c 8b c7	 mov	 r8, rdi
  00083	8d 55 19	 lea	 edx, QWORD PTR [rbp+25]
  00086	48 8b cb	 mov	 rcx, rbx
  00089	e8 00 00 00 00	 call	 ??_L@YAXPEAX_K1P6AX0@Z2@Z
  0008e	90		 npad	 1
  0008f	49 89 1e	 mov	 QWORD PTR [r14], rbx

; 41   : 			biases = new Eigen::Matrix<double, Eigen::Dynamic, 1>[hidden_layer_count + 1];

  00092	48 89 7c 24 38	 mov	 QWORD PTR $T4[rsp], rdi
  00097	b8 10 00 00 00	 mov	 eax, 16
  0009c	48 f7 e7	 mul	 rdi
  0009f	48 0f 40 c5	 cmovo	 rax, rbp
  000a3	48 83 c0 08	 add	 rax, 8
  000a7	48 0f 42 c5	 cmovb	 rax, rbp
  000ab	48 8b c8	 mov	 rcx, rax
  000ae	e8 00 00 00 00	 call	 ??_U@YAPEAX_K@Z		; operator new[]
  000b3	48 89 44 24 30	 mov	 QWORD PTR $T5[rsp], rax
  000b8	48 89 38	 mov	 QWORD PTR [rax], rdi
  000bb	48 8d 58 08	 lea	 rbx, QWORD PTR [rax+8]
  000bf	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??1?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ
  000c6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000cb	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ ; Eigen::Matrix<double,-1,1,0,-1,1>::Matrix<double,-1,1,0,-1,1>
  000d2	4c 8b c7	 mov	 r8, rdi
  000d5	8d 55 11	 lea	 edx, QWORD PTR [rbp+17]
  000d8	48 8b cb	 mov	 rcx, rbx
  000db	e8 00 00 00 00	 call	 ??_L@YAXPEAX_K1P6AX0@Z2@Z
  000e0	90		 npad	 1
  000e1	49 89 5e 08	 mov	 QWORD PTR [r14+8], rbx

; 42   : 			layer_count = hidden_layer_count + 1;

  000e5	49 89 7e 10	 mov	 QWORD PTR [r14+16], rdi

; 43   : 
; 44   : 			uint64_t		i = 0;
; 45   : 			uint64_t		in_size = input_size;

  000e9	bf d8 02 00 00	 mov	 edi, 728		; 000002d8H

; 46   : 
; 47   : 			for (uint64_t size : layers) {

  000ee	49 bd ff ff ff
	ff ff ff ff 7f	 mov	 r13, 9223372036854775807 ; 7fffffffffffffffH
  000f8	49 3b f4	 cmp	 rsi, r12
  000fb	0f 84 c2 00 00
	00		 je	 $LN3@Network
$LL4@Network:
  00101	48 8b 1e	 mov	 rbx, QWORD PTR [rsi]

; 48   : 				weights[i].resize(size, in_size);

  00104	49 8b 2e	 mov	 rbp, QWORD PTR [r14]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h

; 273  :       eigen_assert(   EIGEN_IMPLIES(RowsAtCompileTime!=Dynamic,rows==RowsAtCompileTime)

  00107	48 85 db	 test	 rbx, rbx
  0010a	78 05		 js	 SHORT $LN14@Network
  0010c	48 85 ff	 test	 rdi, rdi
  0010f	79 1a		 jns	 SHORT $LN15@Network
$LN14@Network:
  00111	41 b8 15 01 00
	00		 mov	 r8d, 277		; 00000115H
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
  0011e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DBO@BCDCEIEF@?$AA?$CI?$AA?$CB?$AA?$CI?$AAR?$AAo?$AAw?$AAs?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl@
  00125	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
$LN15@Network:

; 45   :     bool error = (rows == 0 || cols == 0) ? false

  0012b	48 85 db	 test	 rbx, rbx
  0012e	74 16		 je	 SHORT $LN112@Network
  00130	48 85 ff	 test	 rdi, rdi
  00133	74 11		 je	 SHORT $LN112@Network
  00135	49 8b c5	 mov	 rax, r13
  00138	48 99		 cdq
  0013a	48 f7 ff	 idiv	 rdi

; 46   :                : (rows > max_index / cols);
; 47   :     if (error)

  0013d	48 3b d8	 cmp	 rbx, rax
  00140	0f 8f 22 01 00
	00		 jg	 $LN116@Network
$LN112@Network:

; 285  :         m_storage.resize(rows*cols, rows, cols);

  00146	48 8b d3	 mov	 rdx, rbx
  00149	48 0f af d7	 imul	 rdx, rdi
  0014d	4c 8b cf	 mov	 r9, rdi
  00150	4c 8b c3	 mov	 r8, rbx
  00153	48 8b cd	 mov	 rcx, rbp
  00156	e8 00 00 00 00	 call	 ?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z ; Eigen::DenseStorage<double,-1,-1,-1,0>::resize
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 49   : 				biases[i].resize(size);

  0015b	49 8b 7e 08	 mov	 rdi, QWORD PTR [r14+8]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h

; 304  :       eigen_assert(((SizeAtCompileTime == Dynamic && (MaxSizeAtCompileTime==Dynamic || size<=MaxSizeAtCompileTime)) || SizeAtCompileTime == size) && size>=0);

  0015f	48 85 db	 test	 rbx, rbx
  00162	79 1a		 jns	 SHORT $LN28@Network
  00164	41 b8 30 01 00
	00		 mov	 r8d, 304		; 00000130H
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
  00171	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BBE@FLFGDPIJ@?$AA?$CI?$AA?$CI?$AAS?$AAi?$AAz?$AAe?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe@
  00178	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
$LN28@Network:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h

; 635  :       if(size != m_rows*_Cols)

  0017e	48 3b 5f 08	 cmp	 rbx, QWORD PTR [rdi+8]
  00182	74 2b		 je	 SHORT $LN47@Network

; 636  :       {
; 637  :         internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows);

  00184	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\util\Memory.h

; 116  :   if (ptr) {

  00187	48 85 c9	 test	 rcx, rcx
  0018a	74 0a		 je	 SHORT $LN57@Network

; 117  :     EIGEN_USING_STD(free)
; 118  :     free(*(reinterpret_cast<void**>(ptr) - 1));

  0018c	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00190	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN57@Network:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h

; 638  :         if (size>0) // >0 and not simply !=0 to let the compiler knows that size cannot be negative

  00196	48 85 db	 test	 rbx, rbx
  00199	7e 0d		 jle	 SHORT $LN46@Network

; 639  :           m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);

  0019b	48 8b cb	 mov	 rcx, rbx
  0019e	e8 00 00 00 00	 call	 ??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z ; Eigen::internal::conditional_aligned_new_auto<double,1>
  001a3	48 89 07	 mov	 QWORD PTR [rdi], rax
  001a6	eb 07		 jmp	 SHORT $LN47@Network
$LN46@Network:

; 640  :         else
; 641  :           m_data = 0;

  001a8	48 c7 07 00 00
	00 00		 mov	 QWORD PTR [rdi], 0
$LN47@Network:

; 642  :         EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN({})
; 643  :       }
; 644  :       m_rows = rows;

  001af	48 89 5f 08	 mov	 QWORD PTR [rdi+8], rbx
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 50   : 				in_size = size;

  001b3	48 8b fb	 mov	 rdi, rbx

; 46   : 
; 47   : 			for (uint64_t size : layers) {

  001b6	48 83 c6 08	 add	 rsi, 8
  001ba	49 3b f4	 cmp	 rsi, r12
  001bd	0f 85 3e ff ff
	ff		 jne	 $LL4@Network
$LN3@Network:

; 51   : 			}
; 52   : 
; 53   : 			weights[hidden_layer_count].resize(output_size, in_size);

  001c3	4f 8d 0c 7f	 lea	 r9, QWORD PTR [r15+r15*2]
  001c7	49 8b 06	 mov	 rax, QWORD PTR [r14]
  001ca	4a 8d 1c c8	 lea	 rbx, QWORD PTR [rax+r9*8]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h

; 273  :       eigen_assert(   EIGEN_IMPLIES(RowsAtCompileTime!=Dynamic,rows==RowsAtCompileTime)

  001ce	48 85 ff	 test	 rdi, rdi
  001d1	79 1c		 jns	 SHORT $LN118@Network
  001d3	41 b8 15 01 00
	00		 mov	 r8d, 277		; 00000115H
  001d9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MO@IEDNFCAN@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
  001e0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DBO@BCDCEIEF@?$AA?$CI?$AA?$CB?$AA?$CI?$AAR?$AAo?$AAw?$AAs?$AAA?$AAt?$AAC?$AAo?$AAm?$AAp?$AAi?$AAl@
  001e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  001ed	eb 02		 jmp	 SHORT $LN115@Network
$LN118@Network:

; 45   :     bool error = (rows == 0 || cols == 0) ? false

  001ef	74 0e		 je	 SHORT $LN64@Network
$LN115@Network:
  001f1	49 8b c5	 mov	 rax, r13
  001f4	48 99		 cdq
  001f6	48 f7 ff	 idiv	 rdi

; 46   :                : (rows > max_index / cols);
; 47   :     if (error)

  001f9	48 83 f8 0a	 cmp	 rax, 10
  001fd	7c 69		 jl	 SHORT $LN116@Network
$LN64@Network:

; 285  :         m_storage.resize(rows*cols, rows, cols);

  001ff	48 8d 14 bf	 lea	 rdx, QWORD PTR [rdi+rdi*4]
  00203	48 03 d2	 add	 rdx, rdx
  00206	4c 8b cf	 mov	 r9, rdi
  00209	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0020f	48 8b cb	 mov	 rcx, rbx
  00212	e8 00 00 00 00	 call	 ?resize@?$DenseStorage@N$0?0$0?0$0?0$0A@@Eigen@@QEAAX_J00@Z ; Eigen::DenseStorage<double,-1,-1,-1,0>::resize
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 54   : 			biases[hidden_layer_count].resize(output_size);

  00217	49 c1 e7 04	 shl	 r15, 4
  0021b	4d 03 7e 08	 add	 r15, QWORD PTR [r14+8]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h

; 635  :       if(size != m_rows*_Cols)

  0021f	49 83 7f 08 0a	 cmp	 QWORD PTR [r15+8], 10
  00224	74 1f		 je	 SHORT $LN93@Network

; 636  :       {
; 637  :         internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows);

  00226	49 8b 0f	 mov	 rcx, QWORD PTR [r15]
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\util\Memory.h

; 116  :   if (ptr) {

  00229	48 85 c9	 test	 rcx, rcx
  0022c	74 0a		 je	 SHORT $LN114@Network

; 117  :     EIGEN_USING_STD(free)
; 118  :     free(*(reinterpret_cast<void**>(ptr) - 1));

  0022e	48 8b 49 f8	 mov	 rcx, QWORD PTR [rcx-8]
  00232	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN114@Network:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseStorage.h

; 639  :           m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);

  00238	b9 0a 00 00 00	 mov	 ecx, 10
  0023d	e8 00 00 00 00	 call	 ??$conditional_aligned_new_auto@N$00@internal@Eigen@@YAPEAN_K@Z ; Eigen::internal::conditional_aligned_new_auto<double,1>
  00242	49 89 07	 mov	 QWORD PTR [r15], rax
$LN93@Network:

; 642  :         EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN({})
; 643  :       }
; 644  :       m_rows = rows;

  00245	49 c7 47 08 0a
	00 00 00	 mov	 QWORD PTR [r15+8], 10
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 57   : 		}

  0024d	49 8b c6	 mov	 rax, r14
  00250	48 8b 9c 24 88
	00 00 00	 mov	 rbx, QWORD PTR [rsp+136]
  00258	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0025c	41 5f		 pop	 r15
  0025e	41 5e		 pop	 r14
  00260	41 5d		 pop	 r13
  00262	41 5c		 pop	 r12
  00264	5f		 pop	 rdi
  00265	5e		 pop	 rsi
  00266	5d		 pop	 rbp
  00267	c3		 ret	 0
$LN116@Network:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\PlainObjectBase.h

; 48   :       throw_std_bad_alloc();

  00268	e8 00 00 00 00	 call	 ?throw_std_bad_alloc@internal@Eigen@@YAXXZ ; Eigen::internal::throw_std_bad_alloc
  0026d	cc		 int	 3
$LN117@Network:
??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z ENDP ; Neural::Network::Network
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 48
$T1 = 48
$T4 = 56
$T2 = 56
this$ = 128
input_size$dead$ = 136
layers$ = 144
output_size$dead$ = 152
?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA PROC ; `Neural::Network::Network'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b ea	 mov	 rbp, rdx
  00009	b8 18 00 00 00	 mov	 eax, 24
  0000e	48 f7 65 30	 mul	 QWORD PTR $T1[rbp]
  00012	48 8b d0	 mov	 rdx, rax
  00015	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  0001c	48 0f 40 d0	 cmovo	 rdx, rax
  00020	48 83 c2 08	 add	 rdx, 8
  00024	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  0002b	48 0f 42 d0	 cmovb	 rdx, rax
  0002f	48 8b 4d 38	 mov	 rcx, QWORD PTR $T2[rbp]
  00033	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?dtor$0@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA ENDP ; `Neural::Network::Network'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 48
$T1 = 48
$T4 = 56
$T2 = 56
this$ = 128
input_size$dead$ = 136
layers$ = 144
output_size$dead$ = 152
?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA PROC ; `Neural::Network::Network'::`1'::dtor$1
  0003e	40 55		 push	 rbp
  00040	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	b8 10 00 00 00	 mov	 eax, 16
  0004c	48 f7 65 38	 mul	 QWORD PTR $T4[rbp]
  00050	48 8b d0	 mov	 rdx, rax
  00053	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  0005a	48 0f 40 d0	 cmovo	 rdx, rax
  0005e	48 83 c2 08	 add	 rdx, 8
  00062	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00069	48 0f 42 d0	 cmovb	 rdx, rax
  0006d	48 8b 4d 30	 mov	 rcx, QWORD PTR $T5[rbp]
  00071	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?dtor$1@?0???0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z@4HA ENDP ; `Neural::Network::Network'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
;	COMDAT ??1Network@Neural@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Network@Neural@@QEAA@XZ PROC				; Neural::Network::~Network, COMDAT

; 58   : 		~Network() {

$LN57:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 59   : 			delete[] weights;

  0000d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00010	48 85 c9	 test	 rcx, rcx
  00013	74 30		 je	 SHORT $LN3@Network
  00015	48 8d 59 f8	 lea	 rbx, QWORD PTR [rcx-8]
  00019	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ
  00020	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00023	ba 18 00 00 00	 mov	 edx, 24
  00028	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0002d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00030	48 8d 14 40	 lea	 rdx, QWORD PTR [rax+rax*2]
  00034	48 8d 14 d5 08
	00 00 00	 lea	 rdx, QWORD PTR [rdx*8+8]
  0003c	48 8b cb	 mov	 rcx, rbx
  0003f	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  00044	90		 npad	 1
$LN3@Network:

; 60   : 			delete[] biases;

  00045	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00049	48 85 c9	 test	 rcx, rcx
  0004c	74 2c		 je	 SHORT $LN5@Network
  0004e	48 8d 59 f8	 lea	 rbx, QWORD PTR [rcx-8]
  00052	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ
  00059	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  0005c	ba 10 00 00 00	 mov	 edx, 16
  00061	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  00066	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00069	48 c1 e2 04	 shl	 rdx, 4
  0006d	48 83 c2 08	 add	 rdx, 8
  00071	48 8b cb	 mov	 rcx, rbx
  00074	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  00079	90		 npad	 1
$LN5@Network:

; 61   : 		}

  0007a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??1Network@Neural@@QEAA@XZ ENDP				; Neural::Network::~Network
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\main.cpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\mnist.cpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseCoeffsBase.h
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\mnist.cpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\main.cpp
;	COMDAT main
_TEXT	SEGMENT
i$1$ = 32
tv639 = 40
$T1 = 40
dat$ = 56
net$ = 96
__$ArrayPad$ = 120
argc$ = 192
argv$ = 200
main	PROC						; COMDAT

; 12   : int main(int argc, char** argv) {

$LN121:
  00000	4c 8b dc	 mov	 r11, rsp
  00003	49 89 5b 08	 mov	 QWORD PTR [r11+8], rbx
  00007	49 89 6b 10	 mov	 QWORD PTR [r11+16], rbp
  0000b	49 89 73 18	 mov	 QWORD PTR [r11+24], rsi
  0000f	57		 push	 rdi
  00010	41 54		 push	 r12
  00012	41 55		 push	 r13
  00014	41 56		 push	 r14
  00016	41 57		 push	 r15
  00018	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001f	c4 c1 78 29 73
	c8		 vmovaps XMMWORD PTR [r11-56], xmm6
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 44 24 78	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00034	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00038	33 c0		 xor	 eax, eax
  0003a	c5 f8 11 44 24
	60		 vmovups XMMWORD PTR net$[rsp], xmm0
  00040	49 89 43 b8	 mov	 QWORD PTR [r11-72], rax

; 13   : 	// 728 => 16 => 16 => 10
; 14   : 	Neural::Network net(728, { 16, 16 }, 10);

  00044	48 c7 44 24 28
	10 00 00 00	 mov	 QWORD PTR $T1[rsp], 16
  0004d	48 c7 44 24 30
	10 00 00 00	 mov	 QWORD PTR $T1[rsp+8], 16
  00056	48 8d 44 24 28	 lea	 rax, QWORD PTR $T1[rsp]
  0005b	49 89 43 98	 mov	 QWORD PTR [r11-104], rax
  0005f	49 8d 43 80	 lea	 rax, QWORD PTR [r11-128]
  00063	49 89 43 a0	 mov	 QWORD PTR [r11-96], rax
  00067	4d 8d 43 98	 lea	 r8, QWORD PTR [r11-104]
  0006b	49 8d 4b a8	 lea	 rcx, QWORD PTR [r11-88]
  0006f	e8 00 00 00 00	 call	 ??0Network@Neural@@QEAA@_KV?$initializer_list@_K@std@@0@Z ; Neural::Network::Network
  00074	90		 npad	 1

; 15   : 
; 16   : 	Mnist::Data_Set dat("dat/test_labels.idx1-ubyte", "dat/test_images.idx3-ubyte", 200);

  00075	48 8d 4c 24 38	 lea	 rcx, QWORD PTR dat$[rsp]
  0007a	e8 00 00 00 00	 call	 ??0Data_Set@Mnist@@QEAA@PEBD0I@Z ; Mnist::Data_Set::Data_Set
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\mnist.cpp

; 48   : 	for (uint32_t i = 0; i < dat->count; i++) {

  0007f	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1$[rsp], 0
  00087	48 83 7c 24 48
	00		 cmp	 QWORD PTR dat$[rsp+16], 0
  0008d	0f 86 0e 01 00
	00		 jbe	 $LN11@main
  00093	45 33 ed	 xor	 r13d, r13d
  00096	4c 89 6c 24 28	 mov	 QWORD PTR tv639[rsp], r13
  0009b	c5 fb 10 35 00
	00 00 00	 vmovsd	 xmm6, QWORD PTR __real@406fe00000000000
  000a3	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL12@main:
  000b0	4d 69 fd 80 18
	00 00		 imul	 r15, r13, 6272		; 00001880H

; 49   : 		for (uint32_t j = 0; j < 28; j++) {

  000b7	45 33 f6	 xor	 r14d, r14d
  000ba	45 8d 66 1c	 lea	 r12d, QWORD PTR [r14+28]
  000be	4c 8d 2d 00 00
	00 00		 lea	 r13, OFFSET FLAT:??_C@_09CIGFLNGD@?$BL?$FL0m?4?4?$BL?$FLm@
  000c5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL15@main:
  000d0	33 db		 xor	 ebx, ebx

; 50   : 			for (uint32_t k = 0; k < 28; k++) {

  000d2	49 8b fe	 mov	 rdi, r14
  000d5	8d 6b 1c	 lea	 ebp, QWORD PTR [rbx+28]
  000d8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL18@main:

; 51   : 				current = (uint8_t)std::round(dat->data[i](k, j) * 255);

  000e0	48 8b 74 24 40	 mov	 rsi, QWORD PTR dat$[rsp+8]
  000e5	49 03 f7	 add	 rsi, r15
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\dependencies\Eigen\src\Core\DenseCoeffsBase.h

; 366  :       eigen_assert(row >= 0 && row < rows()

  000e8	48 83 fb 1b	 cmp	 rbx, 27
  000ec	77 09		 ja	 SHORT $LN26@main
  000ee	49 81 fe 7f 18
	00 00		 cmp	 r14, 6271		; 0000187fH
  000f5	76 1a		 jbe	 SHORT $LN27@main
$LN26@main:
  000f7	41 b8 6f 01 00
	00		 mov	 r8d, 367		; 0000016fH
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MO@MNMFCLKA@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAm?$AAa?$AAr?$AAi?$AAj?$AA?2@
  00104	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GK@FICMDKNL@?$AAr?$AAo?$AAw?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAr?$AAo?$AAw@
  0010b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
$LN27@main:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\mnist.cpp

; 51   : 				current = (uint8_t)std::round(dat->data[i](k, j) * 255);

  00111	c5 cb 59 04 37	 vmulsd	 xmm0, xmm6, QWORD PTR [rdi+rsi]
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_round
  0011c	c5 fb 2c c0	 vcvttsd2si eax, xmm0

; 52   : 				if (current > 127) { printf("\033[7m..\033[m"); }  // "%02x", current

  00120	3c 7f		 cmp	 al, 127			; 0000007fH
  00122	76 09		 jbe	 SHORT $LN19@main
  00124	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_09CCKALEHK@?$BL?$FL7m?4?4?$BL?$FLm@
  0012b	eb 0d		 jmp	 SHORT $LN16@main
$LN19@main:

; 53   : 				else if (current != 0) { printf("\033[100m..\033[m"); }  // "%02x", current

  0012d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0M@BAGGIMII@?$BL?$FL100m?4?4?$BL?$FLm@
  00134	84 c0		 test	 al, al
  00136	49 0f 44 cd	 cmove	 rcx, r13
$LN16@main:

; 50   : 			for (uint32_t k = 0; k < 28; k++) {

  0013a	e8 00 00 00 00	 call	 printf
  0013f	48 ff c3	 inc	 rbx
  00142	48 83 c7 08	 add	 rdi, 8
  00146	48 83 ed 01	 sub	 rbp, 1
  0014a	75 94		 jne	 SHORT $LL18@main

; 54   : 				else { printf("\033[0m..\033[m"); }  // "00"
; 55   : 			}
; 56   : 			printf("\n");

  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  00153	e8 00 00 00 00	 call	 printf

; 49   : 		for (uint32_t j = 0; j < 28; j++) {

  00158	49 81 c6 e0 00
	00 00		 add	 r14, 224		; 000000e0H
  0015f	49 83 ec 01	 sub	 r12, 1
  00163	0f 85 67 ff ff
	ff		 jne	 $LL15@main

; 57   : 		}
; 58   : 		printf(" => %d\n\n", dat->labels[i]);

  00169	48 8b 44 24 38	 mov	 rax, QWORD PTR dat$[rsp]
  0016e	4c 8b 6c 24 28	 mov	 r13, QWORD PTR tv639[rsp]
  00173	42 0f be 14 28	 movsx	 edx, BYTE PTR [rax+r13]
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_08DACCFJBL@?5?$DN?$DO?5?$CFd?6?6@
  0017f	e8 00 00 00 00	 call	 printf

; 48   : 	for (uint32_t i = 0; i < dat->count; i++) {

  00184	8b 44 24 20	 mov	 eax, DWORD PTR i$1$[rsp]
  00188	ff c0		 inc	 eax
  0018a	89 44 24 20	 mov	 DWORD PTR i$1$[rsp], eax
  0018e	44 8b e8	 mov	 r13d, eax
  00191	4c 89 6c 24 28	 mov	 QWORD PTR tv639[rsp], r13
  00196	4c 3b 6c 24 48	 cmp	 r13, QWORD PTR dat$[rsp+16]
  0019b	0f 82 0f ff ff
	ff		 jb	 $LL12@main
$LN11@main:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\neural_network.hpp

; 18   : 			if (labels != nullptr)	{ delete[] labels; }

  001a1	48 8b 4c 24 38	 mov	 rcx, QWORD PTR dat$[rsp]
  001a6	48 85 c9	 test	 rcx, rcx
  001a9	74 05		 je	 SHORT $LN46@main
  001ab	e8 00 00 00 00	 call	 ??_V@YAXPEAX@Z		; operator delete[]
$LN46@main:

; 19   : 			if (data != nullptr)	{ delete[] data; }

  001b0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR dat$[rsp+8]
  001b5	48 85 c9	 test	 rcx, rcx
  001b8	74 0b		 je	 SHORT $LN47@main
  001ba	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  001bf	e8 00 00 00 00	 call	 ??_V@YAXPEAXW4align_val_t@std@@@Z ; operator delete[]
  001c4	90		 npad	 1
$LN47@main:

; 59   : 			delete[] weights;

  001c5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR net$[rsp]
  001ca	48 85 c9	 test	 rcx, rcx
  001cd	74 30		 je	 SHORT $LN51@main
  001cf	48 8d 59 f8	 lea	 rbx, QWORD PTR [rcx-8]
  001d3	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$Matrix@N$0?0$0?0$0A@$0?0$0?0@Eigen@@QEAA@XZ
  001da	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  001dd	ba 18 00 00 00	 mov	 edx, 24
  001e2	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  001e7	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  001ea	48 8d 14 40	 lea	 rdx, QWORD PTR [rax+rax*2]
  001ee	48 8d 14 d5 08
	00 00 00	 lea	 rdx, QWORD PTR [rdx*8+8]
  001f6	48 8b cb	 mov	 rcx, rbx
  001f9	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  001fe	90		 npad	 1
$LN51@main:

; 60   : 			delete[] biases;

  001ff	48 8b 4c 24 68	 mov	 rcx, QWORD PTR net$[rsp+8]
  00204	48 85 c9	 test	 rcx, rcx
  00207	74 2c		 je	 SHORT $LN118@main
  00209	48 8d 59 f8	 lea	 rbx, QWORD PTR [rcx-8]
  0020d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$Matrix@N$0?0$00$0A@$0?0$00@Eigen@@QEAA@XZ
  00214	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00217	ba 10 00 00 00	 mov	 edx, 16
  0021c	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  00221	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00224	48 c1 e2 04	 shl	 rdx, 4
  00228	48 83 c2 08	 add	 rdx, 8
  0022c	48 8b cb	 mov	 rcx, rbx
  0022f	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
  00234	90		 npad	 1
$LN118@main:
; File C:\Users\marij\OneDrive\Documenten\GitHub\Neural_Network\src\main.cpp

; 21   : }

  00235	33 c0		 xor	 eax, eax
  00237	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0023c	48 33 cc	 xor	 rcx, rsp
  0023f	e8 00 00 00 00	 call	 __security_check_cookie
  00244	4c 8d 9c 24 90
	00 00 00	 lea	 r11, QWORD PTR [rsp+144]
  0024c	49 8b 5b 30	 mov	 rbx, QWORD PTR [r11+48]
  00250	49 8b 6b 38	 mov	 rbp, QWORD PTR [r11+56]
  00254	49 8b 73 40	 mov	 rsi, QWORD PTR [r11+64]
  00258	c4 c1 78 28 73
	f0		 vmovaps xmm6, XMMWORD PTR [r11-16]
  0025e	49 8b e3	 mov	 rsp, r11
  00261	41 5f		 pop	 r15
  00263	41 5e		 pop	 r14
  00265	41 5d		 pop	 r13
  00267	41 5c		 pop	 r12
  00269	5f		 pop	 rdi
  0026a	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
i$1$ = 32
tv639 = 40
$T1 = 40
dat$ = 56
net$ = 96
__$ArrayPad$ = 120
argc$ = 192
argv$ = 200
main$dtor$0 PROC
  00000	48 8d 8a 60 00
	00 00		 lea	 rcx, QWORD PTR net$[rdx]
  00007	e9 00 00 00 00	 jmp	 ??1Network@Neural@@QEAA@XZ ; Neural::Network::~Network
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@Network@Neural@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@Network@Neural@@QEAAX_K@Z PROC	; Neural::Network::__autoclassinit2, COMDAT
  00000	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00004	33 c0		 xor	 eax, eax
  00006	c5 f8 11 01	 vmovups XMMWORD PTR [rcx], xmm0
  0000a	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
  0000e	c3		 ret	 0
?__autoclassinit2@Network@Neural@@QEAAX_K@Z ENDP	; Neural::Network::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list
;	COMDAT ?size@?$initializer_list@_K@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$initializer_list@_K@std@@QEBA_KXZ PROC		; std::initializer_list<unsigned __int64>::size, COMDAT

; 46   :         return static_cast<size_t>(_Last - _First);

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  00004	48 2b 01	 sub	 rax, QWORD PTR [rcx]
  00007	48 c1 f8 03	 sar	 rax, 3

; 47   :     }

  0000b	c3		 ret	 0
?size@?$initializer_list@_K@std@@QEBA_KXZ ENDP		; std::initializer_list<unsigned __int64>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list
;	COMDAT ?end@?$initializer_list@_K@std@@QEBAPEB_KXZ
_TEXT	SEGMENT
this$ = 8
?end@?$initializer_list@_K@std@@QEBAPEB_KXZ PROC	; std::initializer_list<unsigned __int64>::end, COMDAT

; 42   :         return _Last;

  00000	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]

; 43   :     }

  00004	c3		 ret	 0
?end@?$initializer_list@_K@std@@QEBAPEB_KXZ ENDP	; std::initializer_list<unsigned __int64>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list
;	COMDAT ?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ
_TEXT	SEGMENT
this$ = 8
?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ PROC	; std::initializer_list<unsigned __int64>::begin, COMDAT

; 38   :         return _First;

  00000	48 8b 01	 mov	 rax, QWORD PTR [rcx]

; 39   :     }

  00003	c3		 ret	 0
?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ ENDP	; std::initializer_list<unsigned __int64>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Tools\MSVC\14.33.31629\include\initializer_list
;	COMDAT ??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z
_TEXT	SEGMENT
this$ = 8
_First_arg$ = 16
_Last_arg$ = 24
??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z PROC	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>, COMDAT

; 35   :         : _First(_First_arg), _Last(_Last_arg) {}

  00000	48 89 11	 mov	 QWORD PTR [rcx], rdx
  00003	48 8b c1	 mov	 rax, rcx
  00006	4c 89 41 08	 mov	 QWORD PTR [rcx+8], r8
  0000a	c3		 ret	 0
??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z ENDP	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>
_TEXT	ENDS
END
